.. This document was generated by tools/gen-cpydiff.py

Modules
=======
Generated Tue 21 Nov 2017 21:31:50 UTC

array
-----

.. _cpydiff_modules_array_containment:

Looking for integer not implemented
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Sample code::

    import array
    print(1 in array.array('B', b'12'))

+-------------+-------------------------------------------+
| CPy output: | uPy output:                               |
+-------------+-------------------------------------------+
| ::          | ::                                        |
|             |                                           |
|     False   |     Traceback (most recent call last):    |
|             |       File "<stdin>", line 8, in <module> |
|             |     NotImplementedError:                  |
+-------------+-------------------------------------------+

.. _cpydiff_modules_array_deletion:

Array deletion not implemented
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Sample code::

    import array
    a = array.array('b', (1, 2, 3))
    del a[1]
    print(a)

+------------------------+--------------------------------------------------------------+
| CPy output:            | uPy output:                                                  |
+------------------------+--------------------------------------------------------------+
| ::                     | ::                                                           |
|                        |                                                              |
|     array('b', [1, 3]) |     Traceback (most recent call last):                       |
|                        |       File "<stdin>", line 9, in <module>                    |
|                        |     TypeError: 'array' object does not support item deletion |
+------------------------+--------------------------------------------------------------+

.. _cpydiff_modules_array_subscrstep:

Subscript with step != 1 is not yet implemented
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Sample code::

    import array
    a = array.array('b', (1, 2, 3))
    print(a[3:2:2])

+----------------+---------------------------------------------------------------------------+
| CPy output:    | uPy output:                                                               |
+----------------+---------------------------------------------------------------------------+
| ::             | ::                                                                        |
|                |                                                                           |
|     array('b') |     Traceback (most recent call last):                                    |
|                |       File "<stdin>", line 9, in <module>                                 |
|                |     NotImplementedError: only slices with step=1 (aka None) are supported |
+----------------+---------------------------------------------------------------------------+

deque
-----

.. _cpydiff_modules_deque:

Deque not implemented
~~~~~~~~~~~~~~~~~~~~~

**Workaround:** Use regular lists. micropython-lib has implementation of collections.deque.

Sample code::

    import collections
    D = collections.deque()
    print(D)

+---------------+--------------------------------------------------------------+
| CPy output:   | uPy output:                                                  |
+---------------+--------------------------------------------------------------+
| ::            | ::                                                           |
|               |                                                              |
|     deque([]) |     Traceback (most recent call last):                       |
|               |       File "<stdin>", line 8, in <module>                    |
|               |     AttributeError: 'module' object has no attribute 'deque' |
+---------------+--------------------------------------------------------------+

json
----

.. _cpydiff_modules_json_nonserializable:

JSON module does not throw exception when object is not serialisable
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Sample code::

    import json
    a = bytes(x for x in range(256))
    try:
        z = json.dumps(a)
        x = json.loads(z)
        print('Should not get here')
    except TypeError:
        print('TypeError')

+---------------+-------------------------+
| CPy output:   | uPy output:             |
+---------------+-------------------------+
| ::            | ::                      |
|               |                         |
|     TypeError |     Should not get here |
+---------------+-------------------------+

struct
------

.. _cpydiff_modules_struct_fewargs:

Struct pack with too few args, not checked by uPy
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Sample code::

    import struct
    try:
        print(struct.pack('bb', 1))
        print('Should not get here')
    except:
        print('struct.error')

+------------------+-------------------------+
| CPy output:      | uPy output:             |
+------------------+-------------------------+
| ::               | ::                      |
|                  |                         |
|     struct.error |     b'\x01\x00'         |
|                  |     Should not get here |
+------------------+-------------------------+

.. _cpydiff_modules_struct_manyargs:

Struct pack with too many args, not checked by uPy
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Sample code::

    import struct
    try:
        print(struct.pack('bb', 1, 2, 3))
        print('Should not get here')
    except:
        print('struct.error')

+------------------+-------------------------+
| CPy output:      | uPy output:             |
+------------------+-------------------------+
| ::               | ::                      |
|                  |                         |
|     struct.error |     b'\x01\x02'         |
|                  |     Should not get here |
+------------------+-------------------------+

sys
---

.. _cpydiff_modules_sys_stdassign:

Overriding sys.stdin, sys.stdout and sys.stderr not possible
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

**Cause:** They are stored in read-only memory.

Sample code::

    import sys
    sys.stdin = None
    print(sys.stdin)

+-------------+--------------------------------------------------------------+
| CPy output: | uPy output:                                                  |
+-------------+--------------------------------------------------------------+
| ::          | ::                                                           |
|             |                                                              |
|     None    |     Traceback (most recent call last):                       |
|             |       File "<stdin>", line 8, in <module>                    |
|             |     AttributeError: 'module' object has no attribute 'stdin' |
+-------------+--------------------------------------------------------------+

